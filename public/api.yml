asyncapi: 2.6.0
info:
  title: Pushy-AI API
  version: 0.0.2
  description: >
    WebSocket API for Pushy-AI physically based remote AI agents. Pushy-AI agents may be used to control Digital Twin simulations and real-world robots. Use this API to send state to the AI and receive AI actions.

servers:
  public:
    url: ws.pushy-ai.glitch.me
    protocol: wss
    description: >
      Websocket API server for Pushy-AI physically based remote AI agents.
      Once the socket is open, an AI can request world state information, receive world state updates and send AI actions.

channels:
  /:
    subscribe:
      description: Receive these messages from the API
      message:
        oneOf:
          - $ref: "#/components/messages/actions"
          - $ref: "#/components/messages/stateRequest"
    publish:
      description: Send these messages to the API
      message:
        oneOf:
          - $ref: "#/components/messages/dynamicState"
          - $ref: "#/components/messages/staticState"
          - $ref: "#/components/messages/collisions"

components:
  messages:
    actions:
      summary: AI actions
      description: >-
        Send an action to the simulation.
      payload:
        $ref: "#/components/schemas/actions"
      examples:
        - payload:
            event: actions
            actions:
              - FORWARD
              - LEFT
    stateRequest:
      summary: World state request
      description: >-
        Use this message to request a world state update.
      payload:
        $ref: "#/components/schemas/stateRequest"
      x-response:
        $ref: "#/components/messages/staticState"
      examples:
        - payload:
            event: stateRequest
    staticState:
      summary: Static world state i.e. information about world fixtures.
      description: >-
        staticState response to a stateRequest message
      payload:
        $ref: "#/components/schemas/staticObject"
      examples:
        - payload:
            event: staticState
            objects:
              - id: 0
                label: 'wall'
                type: 'wall'
                position:
                  x: 100
                  y: 0
                  z: 100
                orientation:
                  x: 0
                  y: 0
                  z: 0
                size:
                  x: 5
                  y: 20
                  z: 200
              - id: 1
                label: 'playerZone'
                type: 'zone'
                position:
                  x: 100
                  y: 0
                  z: 100
                orientation:
                  x: 0
                  y: 0
                  z: 0
                size:
                  x: 5
                  y: 20
                  z: 200
    dynamicState:
      summary: Dynamic world state
      description: >-
        Current state of dynamic objects in the world
      payload:
        $ref: "#/components/schemas/dynamicState"
      examples:
        - payload:
            event: dynamicState
            objects:
              - id: '0'
                type: kart
                label: playerKart
                position:
                  x: 1
                  y: 0
                  z: 1
                orientation:
                  x: 0
                  y: 0
                  z: 0
                velocity: 
                  x: 0
                  y: 0
                  z: 0
                speed: 0
              - id: '1'
                type: kart
                label: enemyKart
                position:
                  x: 1
                  y: 0
                  z: 1
                orientation:
                  x: 0
                  y: 0
                  z: 0
                velocity: 
                  x: 0
                  y: 0
                  z: 0
                speed: 0
              - id: '2'
                type: box
                label: box
                position:
                  x: 1
                  y: 0
                  z: 1
                orientation:
                  x: 0
                  y: 0
                  z: 0
                velocity: 
                  x: 0
                  y: 0
                  z: 0
    collisions:
      summary: Current collisions
      description: >-
        Objects that the AI object is currently in contact with.         Collision messages include the world object in collision with the AI object and the position of the collision contact point.
      payload:
        $ref: "#/components/schemas/collisions"
      examples:
        - payload:
            event: collisions
            collisions:
              - type: wall
                position:
                  x: 1
                  y: 1
                  z: 1
  schemas:
    actions:
      type: object
      properties:
        event:
          type: string
          const: actions
        actions:
          type: array
          items: 
            $ref: "#/components/schemas/action"
      required:
        - event
        - actions
    action:
      type: string
    stateRequest:
      type: object
      properties:
        event:
          type: string
          const: stateRequest
      required:
        - event
    staticState:
      type: object
      properties:
        event:
          type: string
          const: staticState
        objects:
          type: array
          items:
            $ref: "#/components/schemas/staticObject"
      required:
        - event
        - objects
    dynamicState:
      type: object
      properties:
        event:
          type: string
          const: dynamicState
        objects:
          type: array
          items:
            $ref: "#/components/schemas/dynamicObject"
      required:
        - event
        - objects
    collisions:
      array:
        items:
          $ref: "#/components/schemas/collision"
    collision:
      type: object
      properties:
        with: 
          $ref: "#/components/schemas/dynamicObject"
        position:
          $ref: "#/components/schemas/vector3"
    vector3:
      type: object
      properties:
        x:
          type: number
        y:
          type: number
        z:
          type: number
    dynamicObject:
      type: object
      properties:
        id: 
          type: string
        label: 
          type: string
        position:
          $ref: "#/components/schemas/vector3"
        orientation:
          $ref: "#/components/schemas/vector3"
        velocity:
          $ref: "#/components/schemas/vector3"
    staticObject:
      type: object
      properties:
        id: 
          type: string
        label: 
          type: string
        position:
          $ref: "#/components/schemas/vector3"
        orientation:
          $ref: "#/components/schemas/vector3"
        size:
          $ref: "#/components/schemas/vector3"